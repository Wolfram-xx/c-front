@using System.Net.Http
@inject HttpClient Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@using AppDomain.Model
@inject NavigationManager Navigation

<style type="text/css">

    #result {
        background-color: #760396;
        border: 1px solid #bbbbbf;
        border-radius: 15px;
        width: auto;
        padding-right: 10px;
        padding-left: 10px;
        margin-top:120px;
        margin-left: 250px;
        margin-right: 250px;
        font-size: 19px;
    }

        #result table {
            color: white;
        }

        #result a {
            color: white;
        }
    #hr:link{
       color: white;
    }

    #hr:alink {
        color: white;
    }

    #hr:vlink {
        color: white;
    }
    #btnSubmit {
        margin: 15px
    }
</style>

@if (fulfil && individuals == null)
{
    <p>Группы отсутствуют.</p>
}
else if (!fulfil && individuals == null)
{
    <p>Идет загрузка...</p>
}

@if (individuals != null)
{
    <div id="result">
        <table class="table">
            <thead>
                <tr align="center">
                    <th colspan="2">Группы:</th>
                </tr>
            </thead>
            @if (individuals.Count() == 0)
            {
                <tr align="center">
                    <td colspan="2">
                        <p>Группы не найдены</p>
                    </td>
                </tr>
                
            }else
            @foreach (var individual in individuals)
            {
                <tr>
                    <td>
                        
                        <a href="/informationTable/@individual.Id">@individual.Id</a>
                    </td>
                    <td>
                        @individual.InformationDto.Name
                    </td>
                </tr>
            }
        </table>
    </div>

}

@code {
    [Parameter]
    public string MessageAdd { get; set; }

    private IEnumerable<Individual> individuals;
    private bool fulfil = false;

    protected override async Task OnInitializedAsync()
    {
        individuals = await Http.GetFromJsonAsync<IEnumerable<Individual>>
            ($"https://localhost:7279/Info/{MessageAdd}");
        fulfil = true;
    }
}
